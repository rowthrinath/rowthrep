// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace OpenGI.Ecom.Automation.eBrokerDemo.Selenium.FeatureFiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Submit PolicyDetails")]
    public partial class SubmitPolicyDetailsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EB4PolicyDetails.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Submit PolicyDetails", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
testRunner.Given("I have launched in to eBrokerDemo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01 To Check  if the correct models are present")]
        [NUnit.Framework.CategoryAttribute("TestingModels")]
        public virtual void _01ToCheckIfTheCorrectModelsArePresent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 To Check  if the correct models are present", new string[] {
                        "TestingModels"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 9
 testRunner.Then("I should see 4 models on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01 To Check  if the correct tabs are present")]
        [NUnit.Framework.CategoryAttribute("PolicyDetails")]
        public virtual void _01ToCheckIfTheCorrectTabsArePresent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 To Check  if the correct tabs are present", new string[] {
                        "PolicyDetails"});
#line 11
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 12
 testRunner.Then("I should see 4 tabs on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tab"});
            table1.AddRow(new string[] {
                        "POLICY"});
            table1.AddRow(new string[] {
                        "VEHICLE"});
            table1.AddRow(new string[] {
                        "DRIVER"});
            table1.AddRow(new string[] {
                        "QUOTE"});
#line 13
 testRunner.And("I should see the following tabs", ((string)(null)), table1, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02 To Check if correct questions are displayed")]
        [NUnit.Framework.CategoryAttribute("PolicyDetails")]
        public virtual void _02ToCheckIfCorrectQuestionsAreDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 To Check if correct questions are displayed", new string[] {
                        "PolicyDetails"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 22
 testRunner.Then("I should see 6 questions on the current accordion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table2.AddRow(new string[] {
                        "Title"});
            table2.AddRow(new string[] {
                        "FirstName"});
            table2.AddRow(new string[] {
                        "Surname"});
            table2.AddRow(new string[] {
                        "ContactNumber"});
            table2.AddRow(new string[] {
                        "PrimaryEmail"});
            table2.AddRow(new string[] {
                        "CoverStartDate"});
#line 23
 testRunner.And("the following questions should be displayed", ((string)(null)), table2, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03 Fill in all details and submit policy details")]
        [NUnit.Framework.CategoryAttribute("PolicyDetails")]
        public virtual void _03FillInAllDetailsAndSubmitPolicyDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 Fill in all details and submit policy details", new string[] {
                        "PolicyDetails"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 35
testRunner.When("I click the \"MrButton\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
testRunner.Then("the \"MrButton\" button should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table3.AddRow(new string[] {
                        "FirstName",
                        "Test"});
            table3.AddRow(new string[] {
                        "Surname",
                        "Test"});
            table3.AddRow(new string[] {
                        "ContactNumber",
                        "012347566"});
            table3.AddRow(new string[] {
                        "CoverStartDate",
                        "01/01/2017"});
            table3.AddRow(new string[] {
                        "PrimaryEmail",
                        "test@test.com"});
#line 37
testRunner.When("I populate the following questions", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table4.AddRow(new string[] {
                        "FirstName",
                        "Test"});
            table4.AddRow(new string[] {
                        "Surname",
                        "Test"});
            table4.AddRow(new string[] {
                        "ContactNumber",
                        "012347566"});
            table4.AddRow(new string[] {
                        "PrimaryEmail",
                        "test@test.com"});
            table4.AddRow(new string[] {
                        "CoverStartDate",
                        "01/01/2017"});
#line 46
testRunner.Then("the following questions should have the following information", ((string)(null)), table4, "Then ");
#line 56
testRunner.When("I click Next expecting an accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table5.AddRow(new string[] {
                        "OwnerAndUse_Q1"});
            table5.AddRow(new string[] {
                        "OwnerAndUse_Q2"});
            table5.AddRow(new string[] {
                        "OwnerAndUse_Q3"});
            table5.AddRow(new string[] {
                        "OwnerAndUse_Q4"});
            table5.AddRow(new string[] {
                        "OwnerAndUse_Q5"});
            table5.AddRow(new string[] {
                        "CoverDetails_Q1"});
            table5.AddRow(new string[] {
                        "CoverDetails_Q2"});
            table5.AddRow(new string[] {
                        "CoverDetails_Q3"});
            table5.AddRow(new string[] {
                        "CoverDetails_Q4"});
            table5.AddRow(new string[] {
                        "AdditionalDrivers_Q1"});
#line 58
testRunner.Then("the following questions should be displayed", ((string)(null)), table5, "Then ");
#line 70
testRunner.When("I click the \"OwnerAndUse_OwnerYes\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table6.AddRow(new string[] {
                        "OwnerAndUse_PurchaseDate",
                        "01/01/2001"});
#line 71
testRunner.When("I populate the following questions", ((string)(null)), table6, "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table7.AddRow(new string[] {
                        "OwnerAndUse_PurchaseDate",
                        "01/01/2001"});
#line 74
testRunner.Then("the following questions should have the following information", ((string)(null)), table7, "Then ");
#line 77
testRunner.When("I click the \"OwnerAndUse_WhoOwnsYourCar_CompanyDir\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
testRunner.When("I click the \"OwnerAndUse_WhereDoYouPark_Other\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table8.AddRow(new string[] {
                        "OwnerAndUse_WhereDoYouPark_Other_Select",
                        "Public Road"});
#line 80
testRunner.When("I select the following questions", ((string)(null)), table8, "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table9.AddRow(new string[] {
                        "OwnerAndUse_WhereDoYouPark_Other_Select",
                        "Public Road"});
#line 83
testRunner.Then("the following questions should have the following information", ((string)(null)), table9, "Then ");
#line 86
testRunner.When("I click the \"CoverDetails_LevelOfCover_Comp\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
testRunner.When("I click the \"CoverDetails_DoYouNeedWS\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table10.AddRow(new string[] {
                        "CoverDetails_Q2",
                        "£50"});
            table10.AddRow(new string[] {
                        "CoverDetails_Q3",
                        "2"});
            table10.AddRow(new string[] {
                        "CoverDetails_Q4",
                        "Insured Only"});
#line 88
testRunner.When("I populate the following questions", ((string)(null)), table10, "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table11.AddRow(new string[] {
                        "CoverDetails_Q2",
                        "50"});
            table11.AddRow(new string[] {
                        "CoverDetails_Q3",
                        "2"});
            table11.AddRow(new string[] {
                        "CoverDetails_Q4",
                        "Insured Only"});
#line 93
testRunner.Then("the following questions should have the following information", ((string)(null)), table11, "Then ");
#line 98
testRunner.When("I click the \"AdditionalDrivers_Four\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
testRunner.When("I click the \"Vehicle_Next_Button\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
