// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace OpenGI.Ecom.Automation.TPR.Selenium.FeatureFiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("FurtherInformation")]
    public partial class FurtherInformationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FurtherInformation.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "FurtherInformation", "\tIn order to avoid silly mistakes\r\n\tAs a math idiot\r\n\tI want to be told the sum o" +
                    "f two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I have launched in to TPR", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.And("I have shown the Further Information accordion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the correct questions are displayed on the Your Details accordion")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckTheCorrectQuestionsAreDisplayedOnTheYourDetailsAccordion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the correct questions are displayed on the Your Details accordion", new string[] {
                        "Integration"});
#line 11
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 12
 testRunner.Then("I should see 3 questions on the current accordion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table1.AddRow(new string[] {
                        "HouseNumberOrName"});
            table1.AddRow(new string[] {
                        "Postcode"});
            table1.AddRow(new string[] {
                        "MarketingQuestion"});
#line 13
 testRunner.And("the following questions should be displayed", ((string)(null)), table1, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the Further Information questions are mandatory")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckTheFurtherInformationQuestionsAreMandatory()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the Further Information questions are mandatory", new string[] {
                        "Integration"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 21
 testRunner.When("I click Next expecting no accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table2.AddRow(new string[] {
                        "HouseNumberOrName"});
            table2.AddRow(new string[] {
                        "Postcode"});
            table2.AddRow(new string[] {
                        "MarketingQuestion"});
#line 22
 testRunner.Then("the following questions should have an error displayed", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the Further Information Get Address button displays a popup message if no p" +
            "ostcode is entered")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        [NUnit.Framework.CategoryAttribute("GridRun")]
        public virtual void CheckTheFurtherInformationGetAddressButtonDisplaysAPopupMessageIfNoPostcodeIsEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the Further Information Get Address button displays a popup message if no p" +
                    "ostcode is entered", new string[] {
                        "Integration",
                        "GridRun"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 31
 testRunner.When("I click the Get Address button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.Then("a popup message should be displayed with the text \"Please supply a complete postc" +
                    "ode.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the Further Information Get Address button returns a list of addresses if n" +
            "o house number or name is entered")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckTheFurtherInformationGetAddressButtonReturnsAListOfAddressesIfNoHouseNumberOrNameIsEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the Further Information Get Address button returns a list of addresses if n" +
                    "o house number or name is entered", new string[] {
                        "Integration"});
#line 35
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table3.AddRow(new string[] {
                        "Postcode",
                        "WR2 6NJ"});
#line 36
 testRunner.When("I populate the following questions", ((string)(null)), table3, "When ");
#line 39
 testRunner.And("I click the Get Address button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.Then("I should see 4 questions on the current accordion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table4.AddRow(new string[] {
                        "HouseNumberOrName"});
            table4.AddRow(new string[] {
                        "Postcode"});
            table4.AddRow(new string[] {
                        "AddressList"});
            table4.AddRow(new string[] {
                        "MarketingQuestion"});
#line 41
 testRunner.And("the following questions should be displayed", ((string)(null)), table4, "And ");
#line 47
 testRunner.And("the Address Lookup should have more than one item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the Further Information Get Address button returns only one address if the " +
            "house number or name are entered")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckTheFurtherInformationGetAddressButtonReturnsOnlyOneAddressIfTheHouseNumberOrNameAreEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the Further Information Get Address button returns only one address if the " +
                    "house number or name are entered", new string[] {
                        "Integration"});
#line 50
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table5.AddRow(new string[] {
                        "HouseNumberOrName",
                        "3"});
            table5.AddRow(new string[] {
                        "Postcode",
                        "WR2 6NJ"});
#line 51
 testRunner.When("I populate the following questions", ((string)(null)), table5, "When ");
#line 55
 testRunner.And("I click the Get Address button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.Then("I should see 3 questions on the current accordion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
 testRunner.And("the Address Lookup should have only one item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.And("the Selected Address should start \"Bridgehouse Property Consultants\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.When("I click the Cant Find Address button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
 testRunner.Then("I should see 7 questions on the current accordion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data",
                        "Comments"});
            table6.AddRow(new string[] {
                        "HouseNumberOrName",
                        "",
                        "This should get cleared when you click cant find"});
            table6.AddRow(new string[] {
                        "AddressLineOne",
                        "Unit 3, Elgar Business Centre",
                        ""});
            table6.AddRow(new string[] {
                        "AddressLineTwo",
                        "Moseley Road, Hallow",
                        ""});
            table6.AddRow(new string[] {
                        "AddressLineThree",
                        "Worcester",
                        ""});
            table6.AddRow(new string[] {
                        "AddressLineFour",
                        "Worcestershire",
                        ""});
#line 61
 testRunner.And("the following questions should have the following information", ((string)(null)), table6, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the Further Information Cant Find Address button displays the manual addres" +
            "s fields")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckTheFurtherInformationCantFindAddressButtonDisplaysTheManualAddressFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the Further Information Cant Find Address button displays the manual addres" +
                    "s fields", new string[] {
                        "Integration"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 71
 testRunner.When("I click the Cant Find Address button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
 testRunner.Then("I should see 7 questions on the current accordion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table7.AddRow(new string[] {
                        "HouseNumberOrName"});
            table7.AddRow(new string[] {
                        "Postcode"});
            table7.AddRow(new string[] {
                        "AddressLineOne"});
            table7.AddRow(new string[] {
                        "AddressLineTwo"});
            table7.AddRow(new string[] {
                        "AddressLineThree"});
            table7.AddRow(new string[] {
                        "AddressLineFour"});
            table7.AddRow(new string[] {
                        "MarketingQuestion"});
#line 73
 testRunner.And("the following questions should be displayed", ((string)(null)), table7, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check completing the Further Information accordion moves you to the Declarations " +
            "accordion")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckCompletingTheFurtherInformationAccordionMovesYouToTheDeclarationsAccordion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check completing the Further Information accordion moves you to the Declarations " +
                    "accordion", new string[] {
                        "Integration"});
#line 84
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 85
 testRunner.When("I complete the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 86
 testRunner.And("I click Next expecting an accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.Then("I should move to the Declarations accordion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
