// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace OpenGI.Ecom.Automation.Vanilla.Selenium.FeatureFiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Tab One")]
    public partial class TabOneFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "TabOne.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Tab One", "\tIn order to avoid silly mistakes\r\n\tAs a math idiot\r\n\tI want to be told the sum o" +
                    "f two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I have launched in to Vanilla", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the correct questions are displayed on the First Tab")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckTheCorrectQuestionsAreDisplayedOnTheFirstTab()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the correct questions are displayed on the First Tab", new string[] {
                        "Integration"});
#line 11
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 12
 testRunner.Then("I should see 10 questions on the current accordion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table1.AddRow(new string[] {
                        "Title"});
            table1.AddRow(new string[] {
                        "FirstName"});
            table1.AddRow(new string[] {
                        "ShowAnotherQuestion"});
            table1.AddRow(new string[] {
                        "RevealCrossTabQuestion"});
            table1.AddRow(new string[] {
                        "VehicleAgedOver"});
#line 13
 testRunner.And("the following questions should be displayed", ((string)(null)), table1, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the Show Another Question question shows another question")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckTheShowAnotherQuestionQuestionShowsAnotherQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the Show Another Question question shows another question", new string[] {
                        "Integration"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 23
 testRunner.Then("I should see 10 questions on the current accordion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table2.AddRow(new string[] {
                        "ShowAnotherQuestion",
                        "yes"});
#line 24
 testRunner.When("I populate the following questions", ((string)(null)), table2, "When ");
#line 27
 testRunner.Then("I should see 11 questions on the current accordion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table3.AddRow(new string[] {
                        "Title"});
            table3.AddRow(new string[] {
                        "FirstName"});
            table3.AddRow(new string[] {
                        "ShowAnotherQuestion"});
            table3.AddRow(new string[] {
                        "AnotherQuestion"});
            table3.AddRow(new string[] {
                        "RevealCrossTabQuestion"});
            table3.AddRow(new string[] {
                        "VehicleAgedOver"});
#line 28
 testRunner.And("the following questions should be displayed", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table4.AddRow(new string[] {
                        "ShowAnotherQuestion",
                        "no"});
#line 36
 testRunner.When("I populate the following questions", ((string)(null)), table4, "When ");
#line 39
 testRunner.Then("I should see 10 questions on the current accordion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table5.AddRow(new string[] {
                        "Title"});
            table5.AddRow(new string[] {
                        "FirstName"});
            table5.AddRow(new string[] {
                        "ShowAnotherQuestion"});
            table5.AddRow(new string[] {
                        "RevealCrossTabQuestion"});
            table5.AddRow(new string[] {
                        "VehicleAgedOver"});
#line 40
 testRunner.And("the following questions should be displayed", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the Show Another Question question shows another mandatory question")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckTheShowAnotherQuestionQuestionShowsAnotherMandatoryQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the Show Another Question question shows another mandatory question", new string[] {
                        "Integration"});
#line 49
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table6.AddRow(new string[] {
                        "ShowAnotherQuestion",
                        "yes"});
#line 50
 testRunner.When("I populate the following questions", ((string)(null)), table6, "When ");
#line 53
 testRunner.And("I click Next expecting no accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table7.AddRow(new string[] {
                        "Title"});
            table7.AddRow(new string[] {
                        "FirstName"});
            table7.AddRow(new string[] {
                        "AnotherQuestion"});
#line 54
 testRunner.Then("the following questions should have an error displayed", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the Tab One questions are mandatory")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckTheTabOneQuestionsAreMandatory()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the Tab One questions are mandatory", new string[] {
                        "Integration"});
#line 61
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 62
 testRunner.When("I click Next expecting no accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table8.AddRow(new string[] {
                        "Title"});
            table8.AddRow(new string[] {
                        "FirstName"});
            table8.AddRow(new string[] {
                        "ShowAnotherQuestion"});
#line 63
 testRunner.Then("the following questions should have an error displayed", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if question wording is displayed correctly")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfQuestionWordingIsDisplayedCorrectly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if question wording is displayed correctly", new string[] {
                        "Integration"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table9.AddRow(new string[] {
                        "FirstName"});
            table9.AddRow(new string[] {
                        "AnotherQuestion"});
            table9.AddRow(new string[] {
                        "VehicleAgedOver"});
#line 71
 testRunner.Then("the following questions should have the right wording", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if help text can be displayed")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfHelpTextCanBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if help text can be displayed", new string[] {
                        "Integration"});
#line 78
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 79
 testRunner.When("I hover over the help text icon for \"Title\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.Then("I should see the help wording", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check Max Length is enforced")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckMaxLengthIsEnforced()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check Max Length is enforced", new string[] {
                        "Integration"});
#line 83
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "MaxLength",
                        "Data"});
            table10.AddRow(new string[] {
                        "FirstName",
                        "20",
                        "123456789012345678901"});
#line 84
 testRunner.Then("The maxlength attribute should be present and enforced", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if a question validates using Validator class")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfAQuestionValidatesUsingValidatorClass()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if a question validates using Validator class", new string[] {
                        "Integration"});
#line 89
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 90
 testRunner.When("I complete the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table11.AddRow(new string[] {
                        "VehicleAgedOver",
                        "16"});
#line 91
 testRunner.And("I populate the following questions", ((string)(null)), table11, "And ");
#line 94
 testRunner.And("I click Next expecting no accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table12.AddRow(new string[] {
                        "VehicleAgedOver"});
#line 95
 testRunner.Then("the following questions should have an error displayed", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check Input Width matches Specifed Value")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckInputWidthMatchesSpecifedValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check Input Width matches Specifed Value", new string[] {
                        "Integration"});
#line 100
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Width",
                        "Unit"});
            table13.AddRow(new string[] {
                        "Title",
                        "80",
                        "px"});
            table13.AddRow(new string[] {
                        "FirstName",
                        "149",
                        "px"});
#line 101
 testRunner.Then("Following questions should have Corresponding Width", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if Cross Tab Question Visibility is Triggered")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfCrossTabQuestionVisibilityIsTriggered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if Cross Tab Question Visibility is Triggered", new string[] {
                        "Integration"});
#line 107
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 108
testRunner.When("I complete the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table14.AddRow(new string[] {
                        "RevealCrossTabQuestion",
                        "yes"});
#line 109
testRunner.And("I populate the following questions", ((string)(null)), table14, "And ");
#line 112
testRunner.And("I click Next expecting an accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table15.AddRow(new string[] {
                        "ContactEmail"});
#line 113
testRunner.Then("the following questions should be displayed", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if email format validation is triggered")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfEmailFormatValidationIsTriggered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if email format validation is triggered", new string[] {
                        "Integration"});
#line 119
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 120
testRunner.When("I complete the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table16.AddRow(new string[] {
                        "RevealCrossTabQuestion",
                        "yes"});
#line 121
testRunner.And("I populate the following questions", ((string)(null)), table16, "And ");
#line 124
testRunner.And("I click Next expecting an accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table17.AddRow(new string[] {
                        "ContactEmail",
                        "abcdefghij"});
            table17.AddRow(new string[] {
                        "RepeatQuestion1",
                        "abcd"});
#line 125
testRunner.And("I populate the following questions", ((string)(null)), table17, "And ");
#line 129
testRunner.And("I click Next expecting no accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table18.AddRow(new string[] {
                        "ContactEmail"});
#line 130
testRunner.Then("the following questions should have an error displayed", ((string)(null)), table18, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table19.AddRow(new string[] {
                        "ContactEmail",
                        "abc@xyz.com"});
#line 133
testRunner.When("I populate the following questions", ((string)(null)), table19, "When ");
#line 136
testRunner.And("I click Next expecting no accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table20.AddRow(new string[] {
                        "ContactEmail"});
#line 137
testRunner.Then("The Following questions should have no error displayed", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if items in dropdown exist from internal using display list overide (hide m" +
            "ain list = true)")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfItemsInDropdownExistFromInternalUsingDisplayListOverideHideMainListTrue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if items in dropdown exist from internal using display list overide (hide m" +
                    "ain list = true)", new string[] {
                        "Integration"});
#line 142
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Data"});
            table21.AddRow(new string[] {
                        "Mr"});
            table21.AddRow(new string[] {
                        "Mrs"});
            table21.AddRow(new string[] {
                        "Ms"});
            table21.AddRow(new string[] {
                        "Miss"});
            table21.AddRow(new string[] {
                        "Dr"});
#line 143
testRunner.Then("The question \"Title\" dropdown list should have the following items", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if items in dropdown exist from internal using display list overide (hide m" +
            "ain list = false)")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfItemsInDropdownExistFromInternalUsingDisplayListOverideHideMainListFalse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if items in dropdown exist from internal using display list overide (hide m" +
                    "ain list = false)", new string[] {
                        "Integration"});
#line 152
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Data"});
            table22.AddRow(new string[] {
                        "MyMain"});
            table22.AddRow(new string[] {
                        "MyFrequent"});
            table22.AddRow(new string[] {
                        "Casual"});
            table22.AddRow(new string[] {
                        "Non Driving"});
#line 153
testRunner.Then("The question \"DriverStatus\" dropdown list should have the following items", ((string)(null)), table22, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if items in dropdown exist from internal using custom list")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfItemsInDropdownExistFromInternalUsingCustomList()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if items in dropdown exist from internal using custom list", new string[] {
                        "Integration"});
#line 161
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Data"});
            table23.AddRow(new string[] {
                        "ListItem1"});
            table23.AddRow(new string[] {
                        "ListItem2"});
            table23.AddRow(new string[] {
                        "ListItem3"});
#line 162
testRunner.Then("The question \"InternalCustomList\" dropdown list should have the following items", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if items in dropdown exist from eQuotes")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfItemsInDropdownExistFromEQuotes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if items in dropdown exist from eQuotes", new string[] {
                        "Integration"});
#line 169
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Data"});
            table24.AddRow(new string[] {
                        "Yes"});
            table24.AddRow(new string[] {
                        "No"});
#line 170
testRunner.Then("The question \"EQuotesList\" dropdown list should have the following items", ((string)(null)), table24, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if Captcha validation is triggered")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfCaptchaValidationIsTriggered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if Captcha validation is triggered", new string[] {
                        "Integration"});
#line 176
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 177
testRunner.When("I complete the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table25.AddRow(new string[] {
                        "CaptchaText",
                        "abcd"});
#line 178
testRunner.And("I populate the following questions", ((string)(null)), table25, "And ");
#line 181
testRunner.And("I click Next expecting no accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table26.AddRow(new string[] {
                        "CaptchaText"});
#line 182
testRunner.Then("the following questions should have an error displayed", ((string)(null)), table26, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table27.AddRow(new string[] {
                        "CaptchaText",
                        "iRobot"});
#line 185
testRunner.When("I populate the following questions", ((string)(null)), table27, "When ");
#line 188
testRunner.And("I click Next expecting an accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
testRunner.Then("tab 2 should be highlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if Page Segments are included onto the Page")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfPageSegmentsAreIncludedOntoThePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if Page Segments are included onto the Page", new string[] {
                        "Integration"});
#line 192
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table28.AddRow(new string[] {
                        "AutomatedTestSegment"});
#line 193
testRunner.Then("the following questions should be displayed", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if Tempalte Populator populates First name")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfTempaltePopulatorPopulatesFirstName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if Tempalte Populator populates First name", new string[] {
                        "Integration"});
#line 198
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 199
testRunner.When("I complete the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table29.AddRow(new string[] {
                        "FirstName",
                        "Selenium"});
#line 200
testRunner.And("I populate the following questions", ((string)(null)), table29, "And ");
#line 203
testRunner.And("I click Next expecting an accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table30.AddRow(new string[] {
                        "TestSegment",
                        "Selenium"});
#line 204
testRunner.Then("the following questions should have the following information", ((string)(null)), table30, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if Template Populator populates conditional statements")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfTemplatePopulatorPopulatesConditionalStatements()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if Template Populator populates conditional statements", new string[] {
                        "Integration"});
#line 209
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 210
testRunner.When("I complete the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table31.AddRow(new string[] {
                        "Tab2TemplatePopulator",
                        "Mr"});
#line 211
testRunner.And("I populate the following questions", ((string)(null)), table31, "And ");
#line 214
testRunner.And("I click Next expecting an accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table32.AddRow(new string[] {
                        "ConditionalSegment",
                        "it exists!"});
#line 215
testRunner.Then("the following questions should have the following information", ((string)(null)), table32, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if Template Populator populates conditional statements (negative test)")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfTemplatePopulatorPopulatesConditionalStatementsNegativeTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if Template Populator populates conditional statements (negative test)", new string[] {
                        "Integration"});
#line 220
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 221
testRunner.When("I complete the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 222
testRunner.And("I click Next expecting an accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table33.AddRow(new string[] {
                        "ConditionalSegment",
                        "it does not exist!"});
#line 223
testRunner.Then("the following questions should have the following information", ((string)(null)), table33, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
