// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace OpenGI.Ecom.Automation.eBrokerDemo.Selenium.FeatureFiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TabOne")]
    public partial class TabOneFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "TabOne.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "TabOne", "\tCheck for things on Tab One for eBrokerDemo website", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
testRunner.Given("I have launched in to eBrokerDemo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the correct questions are displayed on the First Tab")]
        [NUnit.Framework.CategoryAttribute("IntegrationdeBroker")]
        public virtual void CheckTheCorrectQuestionsAreDisplayedOnTheFirstTab()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the correct questions are displayed on the First Tab", new string[] {
                        "IntegrationdeBroker"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 10
 testRunner.When("I click on Get a Quote in open insurance page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("I should see 11 questions on the current accordion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table1.AddRow(new string[] {
                        "PromotionCode"});
            table1.AddRow(new string[] {
                        "Marketing"});
            table1.AddRow(new string[] {
                        "Title"});
            table1.AddRow(new string[] {
                        "FirstName"});
            table1.AddRow(new string[] {
                        "Surname"});
            table1.AddRow(new string[] {
                        "ContactNumber"});
            table1.AddRow(new string[] {
                        "PrimaryEmail"});
            table1.AddRow(new string[] {
                        "Postcode"});
            table1.AddRow(new string[] {
                        "CoverType"});
            table1.AddRow(new string[] {
                        "CoverStartDate"});
#line 12
 testRunner.And("the following questions should be displayed", ((string)(null)), table1, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if email validation is trigerred")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfEmailValidationIsTrigerred()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if email validation is trigerred", new string[] {
                        "Integration"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 28
testRunner.When("I complete the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question",
                        "Data"});
            table2.AddRow(new string[] {
                        "PrimaryEmail",
                        "abc"});
#line 29
testRunner.And("I populate the following questions", ((string)(null)), table2, "And ");
#line 32
testRunner.And("I click Next expecting no accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table3.AddRow(new string[] {
                        "PrimaryEmail"});
#line 33
testRunner.Then("the following questions should have an error displayed", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if help text can be displayed")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfHelpTextCanBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if help text can be displayed", new string[] {
                        "Integration"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 39
 testRunner.When("I hover over the help text icon for \"Marketing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.Then("I should see the help wording", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if validation is trigerred for mandatory questions")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfValidationIsTrigerredForMandatoryQuestions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if validation is trigerred for mandatory questions", new string[] {
                        "Integration"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 45
testRunner.When("I click Next expecting no accordion transition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Question"});
            table4.AddRow(new string[] {
                        "Title"});
            table4.AddRow(new string[] {
                        "FirstName"});
            table4.AddRow(new string[] {
                        "Surname"});
            table4.AddRow(new string[] {
                        "ContactNumber"});
            table4.AddRow(new string[] {
                        "PrimaryEmail"});
            table4.AddRow(new string[] {
                        "Postcode"});
#line 46
testRunner.Then("the following questions should have an error displayed", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check if cover start date cannot be in the past")]
        [NUnit.Framework.CategoryAttribute("Integration")]
        public virtual void CheckIfCoverStartDateCannotBeInThePast()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check if cover start date cannot be in the past", new string[] {
                        "Integration"});
#line 56
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
